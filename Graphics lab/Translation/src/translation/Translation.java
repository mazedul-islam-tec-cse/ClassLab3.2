/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package translation;

import java.awt.Graphics;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class Translation extends javax.swing.JFrame {

    /**
     * Creates new form Translation
     */
    static int[] x = new int[3];
    static int[] y = new int[3];
    static int sx, sy, tx, ty, an;
    static boolean t, s, r;

    public Translation() {
        initComponents();
    }

    public void paint(Graphics g) {

        int[] xTemp = new int[3];
        int[] yTemp = new int[3];
        g.drawLine(x[0], y[0], x[1], y[1]);
        g.drawLine(x[1], y[1], x[2], y[2]);
        g.drawLine(x[2], y[2], x[0], y[0]);

        if (s) {
            
            for (int i = 0; i < 3; i++) {
                xTemp[i] = x[i]*sx;
                yTemp[i] = y[i]*sy;

            }
            g.drawLine(xTemp[0], yTemp[0], xTemp[1], yTemp[1]);
            g.drawLine(xTemp[1], yTemp[1], xTemp[2], yTemp[2]);
            g.drawLine(xTemp[2], yTemp[2], xTemp[0], yTemp[0]);
            

        } else if (t) {

            g.drawLine(x[0] + tx, y[0] + ty, x[1] + tx, y[1] + ty);
            g.drawLine(x[1] + tx, y[1] + ty, x[2] + tx, y[2] + ty);
            g.drawLine(x[2] + tx, y[2] + ty, x[0] + tx, y[0] + ty);
        } else {

            for (int i = 0; i < 3; i++) {
                xTemp[i] = (int) (x[i] * Math.cos(an) - y[i] * Math.sin(an));
                yTemp[i] = (int) (x[i] * Math.sin(an) + y[i] * Math.cos(an));

            }
            g.drawLine(xTemp[0], yTemp[0], xTemp[1], yTemp[1]);
            g.drawLine(xTemp[1], yTemp[1], xTemp[2], yTemp[2]);
            g.drawLine(xTemp[2], yTemp[2], xTemp[0], yTemp[0]);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1000, 1000));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Translation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Translation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Translation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Translation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//         x = { 100, 200, 300 }; 
//	 y = { 200, 100, 200 }; 
        System.out.println("Enter the three coordinate points : ");
        Scanner input = new Scanner(System.in);
        for (int i = 0; i < 3; i++) {
            x[i] = input.nextInt();
            y[i] = input.nextInt();
        }
        String ch = JOptionPane.showInputDialog("Select an option that you can perform : \n1 for Tanslatation.\n2 for Rotation,\n3 for Scalling  ");

        if (ch.contains("1")) {
            String tm = JOptionPane.showInputDialog("Enter the value of tx : ");
            tx = Integer.parseInt(tm.toString());
            tm = JOptionPane.showInputDialog("Enter the value of ty : ");
            ty = Integer.parseInt(tm.toString());
            t = true;
        } else if (ch.contains("2")) {

            String tm = JOptionPane.showInputDialog("Enter angle : ");
            an = Integer.parseInt(tm.toString());
            r = true;
        } else if (ch.contains("3")) {
            String tm = JOptionPane.showInputDialog("Enter the value of Sx : ");
            sx = Integer.parseInt(tm.toString());
            tm = JOptionPane.showInputDialog("Enter the value of Sy : ");
            sy = Integer.parseInt(tm.toString());
            s = true;
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Translation ob = new Translation();
                ob.setVisible(true);
                ob.paint(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
